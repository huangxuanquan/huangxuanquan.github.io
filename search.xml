<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo和matery搭建博客</title>
      <link href="/2021/09/16/hexo-he-matery-da-jian-bo-ke/"/>
      <url>/2021/09/16/hexo-he-matery-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li></ol><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h2><p>点击<a href="https://git-scm.com/download/">这里</a>安装Git，安装过程很简单这里不演示了。</p><p>教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">点击</a></p><h2 id="2-安装Node"><a href="#2-安装Node" class="headerlink" title="2.安装Node"></a>2.安装Node</h2><p>点击<a href="https://nodejs.org/en/download/">这里</a>安装Node，安装过程很简单,自行选择对应版本进行安装，这里不演示了。</p><p>教程：<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">点击</a></p><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>随便找一个盘创建一个文件夹，刚刚安装了git,所以右键会有git bash here 点击打开,输入一下命令：</p><pre class="line-numbers language-none"><code class="language-none">1、npm install hexo-cli -g2、hexo init #初始化hexo博客3、hexo s # 启动服务# 浏览器输入localhost:4000此时本地博客已经搭建完成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h2><p>首先来到注册git账号登陆并来到git首页，创建仓库如下图，名字用自己github的用户名+.github.io</p><p><img src="http://m.qpic.cn/psc?/V546VOgm1QxkCs0uTrUF2neqJA1QNQn9/45NBuzDIW489QBoVep5mcfqC*vn4y.471RbDX6VVA5eRM.dMjSiqwx5WkeiC**78NSaDbpKo.0R6g4EBmlwSukZqgvYCpNWZ0EfWrhqdLzA!/b&amp;bo=bwNRAgAAAAABFw8!&amp;rf=viewer_4"></p><h2 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5.生成SSH添加到GitHub"></a>5.生成SSH添加到GitHub</h2><p>1.在命令行中生成输入：ssh-keygen -t rsa -C “邮件地址”，生成密钥，一般存于C:\Users\Dell.ssh\id_rsa.pub文件中，进去全选复制。</p><p><img src="http://m.qpic.cn/psc?/V546VOgm1QxkCs0uTrUF2neqJA1QNQn9/45NBuzDIW489QBoVep5mcchhqws8vxdwKUy3aIP9wG2nwCvwN6o*c3zaaWvnUu.24cEi7j8uYJ.*L557Yvpe9kFo7qiL3LaIPw7t5*3bpsA!/b&amp;bo=VgVuAgAAAAABFw8!&amp;rf=viewer_4"></p><p><img src="http://m.qpic.cn/psc?/V546VOgm1QxkCs0uTrUF2neqJA1QNQn9/45NBuzDIW489QBoVep5mcchhqws8vxdwKUy3aIP9wG15wHzMam1PBKdM*6WvXyyGA2OTC6gY2NmoLo4oiCTYYMCqy3zbxH0sPcCN68OldKk!/b&amp;bo=uwPKAQAAAAABF0M!&amp;rf=viewer_4"></p><p>这时会生成令牌记得保存下来。</p><p>测试ssh是否绑定成功命令行输入：ssh -T <a href="mailto:git@github.com">git@github.com</a> </p><h2 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h2><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp; hexo g &amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时博客就上传到github上了，访问：https://用户名.github.io/就能成功看见自己的博客了。</p><p>如果上面看不懂的话这里也有视频教程，博主也是看这个视频搭建的，强烈推荐：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?share_source=copy_web">视频地址</a></p><h2 id="matery教程"><a href="#matery教程" class="headerlink" title="matery教程"></a>matery教程</h2><p>参考官方文档比较简单不多介绍：<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">文档</a></p><p>1.樱花特效</p><p>在<code>themes/matery/source/js</code>目录下新建<code>sakura.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/sakura.js">传送门</a>，将内容复制粘贴到sakura.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class="line-numbers language-none"><code class="language-none">&lt;script type="text/javascript"&gt;//只在桌面版网页启用特效var windowWidth = $(window).width();if (windowWidth &gt; 768) {    document.write('&lt;script type="text/javascript" src="/js/sakura.js"&gt;&lt;\/script&gt;');}&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.2d看板娘</p><p>输入如下命令获取 live2d：</p><pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下命令，下载相应的模型，将 <code>haruto</code> 更换成你想要的模型名称即可（本人就选haruto），更多模型选择请<a href="https://www.cnblogs.com/Friends-A/p/11054968.html#live2dwidgetmodelharuto_22">点击此处</a></p><p>打开站点目录下的 <code>_config.yml</code>文件，添加如下代码：</p><pre class="line-numbers language-none"><code class="language-none">live2d:enable: truescriptFrom: localmodel: use: live2d-widget-model-haruto #模型选择display: position: right  #模型位置width: 150       #模型宽度height: 300      #模型高度mobile: show: false      #是否在手机端显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo g</code> &amp; <code>hexo s</code>重新打开页面我们就拥有了一个卡通人物</p><p><a href="https://blog.sky03.cn/posts/42790.html">hexo进阶之各种优化</a></p><p><a href="https://www.freesion.com/article/438335824/">hexo博客从GitHub迁移到gitee</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的常用命令</title>
      <link href="/2021/09/15/git-chang-yong-ming-ling/"/>
      <url>/2021/09/15/git-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="同步远程仓库"><a href="#同步远程仓库" class="headerlink" title="同步远程仓库"></a>同步远程仓库</h3><pre class="line-numbers language-none"><code class="language-none"># 1. 创建一个空的远程仓库：登录github -&gt; new repository# 2. 初始化本地仓库 git init# 3. 编辑文件# 4. 编辑区添加到暂存区：git add .# 5. 暂存区提交到分支：git commit -m "备注"# 6. 创建远程主机名：git remote# 7. 同步远程仓库：git push -u origin master# 8. 克隆项目：git clone url# 9. 拉取项目代码: git pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><pre class="line-numbers language-none"><code class="language-none"># 1. 查看分支，默认只有master分支git branch# 2. 创建teacher分支git branch teacher# 3. 切换分支git checkout teacher# 4. 在自己分支上修改文件并提交。# 5. 合并分支：切换至master分支，git merge dev# 6. 本地分支推送至远程分支:git push origin feature-branch:feature-branch# 7. 远程分支拉倒本地：git checkout -b feature-branch origin/feature-branch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a>切换版本</h3><pre class="line-numbers language-none"><code class="language-none"># 1. 查看历史记录git log# 2. 恢复版本，版本号写前几位就可以git reset --hard &lt;版本号&gt;# 3. 查看命令记录git reflog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2021/09/15/wo-de-di-yi-pian-wen-zhang/"/>
      <url>/2021/09/15/wo-de-di-yi-pian-wen-zhang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>第一次发博客</p><p>很高兴！！！今后会继续分享干货！！！！！！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
